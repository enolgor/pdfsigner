version: '3'

dotenv: ['.env']

tasks:
  licenses:*:
    vars:
      MODULE: "{{ index .MATCH 0}}"
    cmds:
      - |
        go install github.com/google/go-licenses@latest
        cd {{.MODULE}}
        {{if eq OS "windows"}}
        wsl sh -c "rm THIRD_PARTY_LICENSES.md || true"
        {{else}}
        rm THIRD_PARTY_LICENSES.md || true
        {{end}}
        echo "# Third Party Licenses" >> THIRD_PARTY_LICENSES.md
        echo "" >> THIRD_PARTY_LICENSES.md
        echo "- [github.com/golang/freetype](https://github.com/golang/freetype/blob/master/licenses/ftl.txt) FreeTypeLicense" >> THIRD_PARTY_LICENSES.md
        go-licenses report --template=../.other/licenses.tpl --ignore golang.org --ignore github.com/enolgor/pdfsigner --ignore github.com/golang/freetype . >> THIRD_PARTY_LICENSES.md
  version:*:
    vars:
      MODULE: "{{ index .MATCH 0}}"
    desc: 'Get the last version of a module'
    cmds:
      - |
        {{if eq OS "windows"}}
        wsl sh -c "git fetch --tags"
        wsl sh -c "git tag --list '{{.MODULE}}/v*' --sort=-v:refname | head -n 1"
        {{else}}
        git fetch --tags
        git tag --list '{{.MODULE}}/v*' --sort=-v:refname | head -n 1
        {{end}}
  release:*:*:
    vars:
      MODULE: "{{ index .MATCH 0}}"
      VERSION: "{{ index .MATCH 1}}"
    desc: 'Create a release for a module'
    cmds:
      - |
        git tag -a '{{.MODULE}}/{{.VERSION}}' -m 'Release {{.MODULE}} {{.VERSION}}'
        git push origin '{{.MODULE}}/{{.VERSION}}'